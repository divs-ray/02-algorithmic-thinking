#!/usr/bin/env python

long_number = '''1334689116556462941882035808943573171674164401363769460864490234588978262666944913475783756741523897245184207879400801772948519107022172112703850995250828017643114989532341638256433902974862681950869909550724964438670365005594138770568327987006988181115098238786559343074732216472150049113865859400036834001396323915862736324118712200726467082136557785333250304970064033489578066450615899117582800671492006891892806304956446965790733095470234925553972275220958407990275926200444595858581681275746318089599931238390577959492535670612451917097856204279936698818808473734179069393970559180304303301694835535657388574351479006304909345090039619401560275818621377887855535660203417104398980782823962234208247262452130875884319383852931728105858548604792291573328992559286762014408216849863235232618879146570156278193016458175265873338775411585800402047649148239253335046636431821919485725262483287374052121386952248950622806575169311906365131300057110279941542555942008569206742619537842879039448112019071'''

solution = 0 #if not initialized to 0 then if the code fails to compute then this might return garbage value
length   = 12 #desired length of string 'long_number'
for i in range (0,1000-length): #for loop over all slices of 'long_number'
    product = 1
    x= long_number[i:i+length] #pulling out a 12-char sub-string 'x'
    for number in x:
        product *= int(number) #multiply each character of the sub-string 'x'
    if product > solution: #compare result with current max value
        solution = product


# Check for the correct answer.
if length == 12:
  print("#4 : Consecutive Product ::", "Correct." if solution == 2257403904 else ("Wrong: " + str(solution)))
